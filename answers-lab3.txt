1.  Q:What is the purpose of having an individual handler function for each exception/interrupt? (i.e., if all exceptions/interrupts were delivered to the same handler, what feature that exists in the current implementation could not be provided?)
    A: To distinguish the interrupt with error code or not.
2.  Q:Did you have to do anything to make the user/softint program behave correctly? The grade script expects it to produce a general protection fault (trap 13), but softint's code says int $14. Why should this produce interrupt vector 13? What happens if the kernel actually allows softint's int $14 instruction to invoke the kernel's page fault handler (which is interrupt vector 14)?
    A: Yes,the handler of "int 14" is a "ring 0"code,so the user mode with "ring 3" would be prohibited to call "int 14" code.
        Page fault interrupt will manage the page related operation, such as page not in memory, it's a core funtion of kernel, could not be open to anyone.
        
